{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\test-site\\\\components\\\\ImageResult.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef, useEffect } from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\n\nconst getInfo = data => {\n  if (data._type === 'artist') {\n    return (// <div>{data.artistName}</div>\n      console.log(data.artistName)\n    );\n  } else {\n    return (// <div>{data.name}</div>\n      console.log(data.name)\n    );\n  }\n};\n\nconst ImageResult = data => {\n  const {\n    0: width,\n    1: setWidth\n  } = useState(0);\n  const {\n    0: heigth,\n    1: setHeigth\n  } = useState(0);\n  const {\n    0: datas,\n    1: setDatas\n  } = useState(data);\n  const ref = useRef(null); // console.log(ref)\n  // useEffect(() => {\n  // \tsetTest(data.style.width)\n  // }, [])\n\n  const colRef = useRef(datas.style.width);\n  useEffect(() => {\n    const currentWidth = ref.current ? ref.current.naturalWidth : 0;\n    setWidth(currentWidth);\n    const currentHeigth = ref.current ? ref.current.naturalHeight : 0;\n    const getHeigth = currentHeigth + currentHeigth / 2;\n    setHeigth(getHeigth); // console.log(currentWidth)\n  }, [ref.current]); // console.log(width)\n\n  if (width > heigth) {\n    colRef.current = \"40%\"; // colRef.current =\n    // colRef.current = test\n    // console.log(colRef.current)\n    // console.log(colRef.current)\n  } else {\n    colRef.current;\n  } // console.log(colRef.current)\n  // console.log(test)\n  // console.log(width)\n  // console.log(colRef.current)\n\n\n  const newData = update(datas, {\n    style: {\n      width: {\n        $apply: function (x) {\n          return colRef.current;\n        }\n      }\n    }\n  }); // const newData = update(datas,  { $merge: {col:colRef.current} })\n  // const getCol = newData.col\n  // console.log(getCol)\n  // console.log(newData.col)\n  // console.log(test.style.width)\n\n  return (// <div className='image-result__body' key={data._id}>\n    __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(GridListTile, _extends({\n      key: data._id\n    }, newData, {\n      onClick: () => getInfo(data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"image-result__body\",\n      key: data._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, data._type === 'product' ? __jsx(\"div\", {\n      className: \"image-result__body--container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"image-result__body--img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      ref: ref,\n      src: `${data.featurePicture.url}` !== `null` ? `${data.featurePicture.url}` : 'https://image-placeholder.com/images/actual-size/100x75.png',\n      alt: data.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"image-result__body--description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: data.url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \", __jsx(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: data.name\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, data.subHeadText)))) : data._type === 'artist' ? __jsx(\"div\", {\n      className: \"image-result__body--container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"image-result__body--img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      ref: ref,\n      src: `${data.artistImage}` !== `null` ? `${data.artistImage}` : 'https://image-placeholder.com/images/actual-size/100x75.png',\n      alt: data.artistName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"image-result__body--description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: data.urlExtension,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: data.artistName\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \" | \", data.artistBrand), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: data.artistBio.replace(/<[^>]+>/g, '').substring(0, 300)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))))) : null)))\n  );\n};\n\nImageResult.muiName = 'GridListTile';\nImageResult.propTypes = {\n  data: PropTypes.any // eslint-disable-line\n\n};\nexport default ImageResult;","map":{"version":3,"sources":["c:/xampp/htdocs/test-site/components/ImageResult.js"],"names":["React","useState","useRef","useEffect","update","PropTypes","GridListTile","Grid","getInfo","data","_type","console","log","artistName","name","ImageResult","width","setWidth","heigth","setHeigth","datas","setDatas","ref","colRef","style","currentWidth","current","naturalWidth","currentHeigth","naturalHeight","getHeigth","newData","$apply","x","_id","featurePicture","url","__html","subHeadText","artistImage","urlExtension","artistBrand","artistBio","replace","substring","muiName","propTypes","any"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport update from 'immutability-helper';\r\nimport PropTypes from 'prop-types';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst getInfo = (data) => {\r\n\tif (data._type === 'artist') {\r\n\t\treturn (\r\n\t\t\t// <div>{data.artistName}</div>\r\n\t\t\tconsole.log(data.artistName)\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t// <div>{data.name}</div>\r\n\t\t\tconsole.log(data.name)\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst ImageResult = data => {\r\n\tconst [width, setWidth] = useState(0);\r\n\tconst [heigth, setHeigth] = useState(0);\r\n\tconst [datas, setDatas] = useState(data)\r\n\tconst ref = useRef(null);\r\n\r\n\t// console.log(ref)\r\n\t// useEffect(() => {\r\n\t// \tsetTest(data.style.width)\r\n\t// }, [])\r\n\tconst colRef = useRef(datas.style.width)\r\n\tuseEffect(() => {\r\n\t\tconst currentWidth = ref.current ? ref.current.naturalWidth : 0;\r\n\t\tsetWidth(currentWidth)\r\n\t\tconst currentHeigth = ref.current ? ref.current.naturalHeight : 0;\r\n\r\n\t\tconst getHeigth = currentHeigth + (currentHeigth / 2)\r\n\t\tsetHeigth(getHeigth)\r\n\t\t// console.log(currentWidth)\r\n\t}, [ref.current]);\r\n\t// console.log(width)\r\n\tif (width > heigth) {\r\n\t\tcolRef.current = \"40%\"\r\n\t\t// colRef.current =\r\n\t\t// colRef.current = test\r\n\t\t// console.log(colRef.current)\r\n\r\n\t\t// console.log(colRef.current)\r\n\t} else {\r\n\t\tcolRef.current\r\n\t}\r\n\t// console.log(colRef.current)\r\n\t// console.log(test)\r\n\t// console.log(width)\r\n\t// console.log(colRef.current)\r\n\tconst newData = update(datas, { style: { width: { $apply: function (x) { return colRef.current } } } })\r\n\t// const newData = update(datas,  { $merge: {col:colRef.current} })\r\n\t// const getCol = newData.col\r\n\t// console.log(getCol)\r\n\t// console.log(newData.col)\r\n\t// console.log(test.style.width)\r\n\r\n\treturn (\r\n\t\t// <div className='image-result__body' key={data._id}>\r\n\t\t<React.Fragment>\r\n\t\t\t<GridListTile key={data._id} {...newData} onClick={() => getInfo(data)}>\r\n\t\t\t\t<div className='image-result__body' key={data._id}>\r\n\t\t\t\t\t{data._type === 'product' ?\r\n\t\t\t\t\t\t<div className='image-result__body--container'>\r\n\t\t\t\t\t\t\t<div className='image-result__body--img'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\t\t\tsrc={`${data.featurePicture.url}` !== `null` ? `${data.featurePicture.url}` : 'https://image-placeholder.com/images/actual-size/100x75.png'}\r\n\t\t\t\t\t\t\t\t\talt={data.name}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='image-result__body--description'>\r\n\t\t\t\t\t\t\t\t<a href={data.url} target='_blank'>\r\n\t\t\t\t\t\t\t\t\t{/* <p style={{ maxWidth: width }}> <span dangerouslySetInnerHTML={{ __html: data.name }}></span></p>\r\n\t\t\t\t\t\t\t<p style={{ maxWidth: width }}>{data.subHeadText}</p> */}\r\n\t\t\t\t\t\t\t\t\t<p> <span dangerouslySetInnerHTML={{ __html: data.name }}></span></p>\r\n\t\t\t\t\t\t\t\t\t<p>{data.subHeadText}</p>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t{/* <p>{`The component has been re-rendered ${colRef.current} times`}</p> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\tdata._type === 'artist' ?\r\n\t\t\t\t\t\t\t<div className='image-result__body--container'>\r\n\t\t\t\t\t\t\t\t<div className='image-result__body--img'>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\t\t\t\tsrc={`${data.artistImage}` !== `null` ? `${data.artistImage}` : 'https://image-placeholder.com/images/actual-size/100x75.png'}\r\n\t\t\t\t\t\t\t\t\t\talt={data.artistName}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='image-result__body--description'>\r\n\t\t\t\t\t\t\t\t\t<a href={data.urlExtension} target='_blank'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <p style={{ maxWidth: width }}><span dangerouslySetInnerHTML={{ __html: data.artistName }}></span> | {data.artistBrand}</p>\r\n\t\t\t\t\t\t\t\t<p style={{ maxWidth: width }}><span dangerouslySetInnerHTML={{ __html: data.artistBio.replace(/<[^>]+>/g, '').substring(0, 300) }} /></p> */}\r\n\t\t\t\t\t\t\t\t\t\t<p><span dangerouslySetInnerHTML={{ __html: data.artistName }}></span> | {data.artistBrand}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p><span dangerouslySetInnerHTML={{ __html: data.artistBio.replace(/<[^>]+>/g, '').substring(0, 300) }} /></p>\r\n\t\t\t\t\t\t\t\t\t\t{/* <span>{width}</span> */}\r\n\t\t\t\t\t\t\t\t\t\t{/* <p>{colRef}</p> */}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t</div>\r\n\t\t\t</GridListTile>\r\n\t\t</React.Fragment>\r\n\t)\r\n\r\n}\r\n\r\nImageResult.muiName = 'GridListTile'\r\nImageResult.propTypes = {\r\n\tdata: PropTypes.any, // eslint-disable-line\r\n};\r\n\r\nexport default ImageResult;"]},"metadata":{},"sourceType":"module"}