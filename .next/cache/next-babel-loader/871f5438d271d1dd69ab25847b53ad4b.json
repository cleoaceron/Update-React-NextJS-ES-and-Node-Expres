{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$getOwnPropertyNames from \"@babel/runtime-corejs2/core-js/object/get-own-property-names\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\test-site\\\\pages\\\\TabHeader.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport ActiveLink from '../components/ActiveLink';\nimport { withRouter, Router } from 'next/router'; // export default ({ query }) => {\n// \tconsole.log(this)\n// \treturn (\n// \t\t< div >\n// \t\t\t<div>Welcome to Next.js!</div>\n// \t\t\t<Link route='/Artists' params={{ slug: 'hello-world' }}>\n// \t\t\t\t<a>Hello world</a>\n// \t\t\t</Link>\n// \t\t\tor\n// \t< Link route='/Artists/hello-world' >\n// \t\t\t\t<a>Hello world</a>\n// \t\t\t</Link >\n// \t\t</div >\n// \t)\n// }\n// export default class TabHeader extends Component {\n// \tstatic getItialProps({ pathname, query }) {\n// \t\tconsole.log(query)\n// \t\treturn { query }\n// \t}\n// \tconstructor(props) {\n// \t\tsuper(props)\n// \t\tthis.state = {\n// \t\t\tsearchState: this.props.searchSensor,\n// \t\t}\n// \t}\n// \tonChange = (searchState) => {\n// \t\tRouter.push({\n// \t\t\tpathname: '/',\n// \t\t\tquery: { name: searchState }\n// \t\t})\n// \t\tconsole.log(this.props.router.query.name)\n// \t}\n// \trender() {\n// \t\t// console.log(this.props.searchSensor)\n// \t\t// console.log(searchState)\n// \t\tconsole.log(this)\n// \t\t// const Page = ({ router }) => {\n// \t\t// \treturn <p>{router.pathname}</p>\n// \t\t// }\n// \t\t// const PostLink = props => (\n// \t\t// \t<li>\n// \t\t// \t\t<Link href={`/post?title=${props.title}`}>\n// \t\t// \t\t\t<a>{props.title}</a>\n// \t\t// \t\t</Link>\n// \t\t// \t</li>\n// \t\t// )\n// \t\treturn (\n// \t\t\t<nav className=\"tab-header__container nav flex-column flex-sm-row\" >\n// \t\t\t\t<Link href={`/?searchSensor=${this.props.searchSensor}`}><a>All{this.searchState}</a></Link>\n// \t\t\t\t<Link href={`/products/?searchSensor=${this.props.searchSensor}`}><a>Products</a></Link>\n// \t\t\t\t<Link href={`/artists/?searchSensor=${this.props.searchSensor}`}><a>Artists{this.props.searchSensor}</a></Link>\n// \t\t\t</nav>\n// \t\t)\n// \t}\n// }\n// const TabHeader = ({ router }) => {\n// \t// const { query } = this.props\n// \t// console.log(router)\n// \t// slug = router.query.searchSensor\n// \t// console.log(router)\n// \t// console.log(router.query)\n// \t// console.log(query)\n// \t// console.log(slug)\n// \t// console.log(router)\n// \t// console.log(slug)\n// \t// console.log(query.searchSensor)\n// \t// console.log(query.router.query.searchSensor)\n// \tconsole.log(router)\n// \treturn (\n// \t\t<nav className=\"tab-header__container nav flex-column flex-sm-row\" >\n// \t\t\t<ActiveLink href={`/`} prefetch={true}><span>All</span></ActiveLink>\n// \t\t\t<ActiveLink href={`/products`}><span>Products</span></ActiveLink>\n// \t\t\t<ActiveLink href={`/Artists`}><span>Artists</span></ActiveLink>\n// \t\t</nav>\n// \t)\n// }\n// class TabHeader extends React.Component {\n// \trender() {\n// \t\tconst { router } = this.props\n// \t\tconsole.log(router)\n// \t\treturn <div></div>\n// \t}\n// }\n// TabHeader.getInitialProps = async ({ query }) => {\n// \tconsole.log(await query)\n// \t// console.log(query)\n// \treturn { query }\n// }\n// export default withRouter(TabHeader)\n\nvar TabHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TabHeader, _React$Component);\n\n  function TabHeader() {\n    _classCallCheck(this, TabHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TabHeader).apply(this, arguments));\n  }\n\n  _createClass(TabHeader, [{\n    key: \"render\",\n    // state = {\n    // \tquery: this.props.router.query.searchSensor,\n    // }\n    value: function render() {\n      var _this = this;\n\n      var _this$props$router = this.props.router,\n          query = _this$props$router.query,\n          asPath = _this$props$router.asPath; // console.log(this)\n\n      var params = function params() {\n        var query = _this.props.router.query;\n\n        if (_Object$getOwnPropertyNames(query).length == 0) {\n          return '';\n        } else if (typeof query === 'object') {\n          return \"?searchSensor=\".concat(query.searchSensor);\n        }\n      }; // Router.push({\n      // \tpathname: '/',\n      // \tquery: { query: 'test' }\n      // })\n\n\n      return __jsx(\"nav\", {\n        className: \"tab-header__container nav flex-column flex-sm-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, __jsx(ActiveLink, {\n        href: \"/\" + params(),\n        as: '/' + params(),\n        className: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"All\")), __jsx(ActiveLink, {\n        href: '/artists' + params(),\n        as: '/artists' + params(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" \", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Artists\")), __jsx(ActiveLink, {\n        href: \"/products\" + params(),\n        as: '/products' + params(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \" \", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Products\")), __jsx(ActiveLink, {\n        href: \"/images\" + params(),\n        as: '/images' + params(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \" \", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Images\")), __jsx(ActiveLink, {\n        href: \"/videos\" + params(),\n        as: '/videos' + params(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \" \", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Videos\")), __jsx(ActiveLink, {\n        href: \"/downloads\" + params(),\n        as: '/downloads' + params(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \" \", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Downloads\")), __jsx(ActiveLink, {\n        href: \"/discussions\" + params(),\n        as: '/discussions' + params(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \" \", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Discussions\")));\n    }\n  }]);\n\n  return TabHeader;\n}(React.Component);\n\nTabHeader.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref.query;\n            return _context.abrupt(\"return\", {\n              query: query\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withRouter(TabHeader);","map":{"version":3,"sources":["c:/xampp/htdocs/test-site/pages/TabHeader.js"],"names":["React","Component","Link","ActiveLink","withRouter","Router","TabHeader","props","router","query","asPath","params","length","searchSensor","getInitialProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,aAAnC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;IAGMC,S;;;;;;;;;;;;;AACL;AACA;AACA;6BAES;AAAA;;AAAA,+BACmB,KAAKC,KAAL,CAAWC,MAD9B;AAAA,UACAC,KADA,sBACAA,KADA;AAAA,UACOC,MADP,sBACOA,MADP,EAER;;AACA,UAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,YACZF,KADY,GACF,KAAI,CAACF,KAAL,CAAWC,MADT,CACZC,KADY;;AAEpB,YAAI,4BAA2BA,KAA3B,EAAkCG,MAAlC,IAA4C,CAAhD,EAAmD;AAClD,iBAAO,EAAP;AACA,SAFD,MAEO,IAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;AACrC,yCAAwBA,KAAK,CAACI,YAA9B;AACA;AACD,OAPD,CAHQ,CAYR;AACA;AACA;AACA;;;AAEA,aACC;AAAK,QAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,UAAD;AAAY,QAAA,IAAI,EAAE,MAAMF,MAAM,EAA9B;AAAkC,QAAA,EAAE,EAAE,MAAMA,MAAM,EAAlD;AAAsD,QAAA,SAAS,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzE,CADD,EAEC,MAAC,UAAD;AAAY,QAAA,IAAI,EAAE,aAAaA,MAAM,EAArC;AAAyC,QAAA,EAAE,EAAE,aAAaA,MAAM,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArE,CAFD,EAGC,MAAC,UAAD;AAAY,QAAA,IAAI,EAAE,cAAcA,MAAM,EAAtC;AAA0C,QAAA,EAAE,EAAE,cAAcA,MAAM,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvE,CAHD,EAIC,MAAC,UAAD;AAAY,QAAA,IAAI,EAAE,YAAYA,MAAM,EAApC;AAAwC,QAAA,EAAE,EAAE,YAAYA,MAAM,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnE,CAJD,EAKC,MAAC,UAAD;AAAY,QAAA,IAAI,EAAE,YAAYA,MAAM,EAApC;AAAwC,QAAA,EAAE,EAAE,YAAYA,MAAM,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnE,CALD,EAMC,MAAC,UAAD;AAAY,QAAA,IAAI,EAAE,eAAeA,MAAM,EAAvC;AAA2C,QAAA,EAAE,EAAE,eAAeA,MAAM,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAzE,CAND,EAOC,MAAC,UAAD;AAAY,QAAA,IAAI,EAAE,iBAAiBA,MAAM,EAAzC;AAA6C,QAAA,EAAE,EAAE,iBAAiBA,MAAM,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA7E,CAPD,CADD;AAWA;;;;EAjCsBX,KAAK,CAACC,S;;AAoC9BK,SAAS,CAACQ,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASL,YAAAA,KAAT,QAASA,KAAT;AAAA,6CAGpB;AAAEA,cAAAA,KAAK,EAALA;AAAF,aAHoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeL,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link'\r\nimport ActiveLink from '../components/ActiveLink'\r\nimport { withRouter, Router } from 'next/router'\r\n\r\n// export default ({ query }) => {\r\n// \tconsole.log(this)\r\n// \treturn (\r\n// \t\t< div >\r\n// \t\t\t<div>Welcome to Next.js!</div>\r\n// \t\t\t<Link route='/Artists' params={{ slug: 'hello-world' }}>\r\n// \t\t\t\t<a>Hello world</a>\r\n// \t\t\t</Link>\r\n// \t\t\tor\r\n// \t< Link route='/Artists/hello-world' >\r\n// \t\t\t\t<a>Hello world</a>\r\n// \t\t\t</Link >\r\n// \t\t</div >\r\n// \t)\r\n// }\r\n\r\n// export default class TabHeader extends Component {\r\n// \tstatic getItialProps({ pathname, query }) {\r\n// \t\tconsole.log(query)\r\n// \t\treturn { query }\r\n// \t}\r\n// \tconstructor(props) {\r\n// \t\tsuper(props)\r\n// \t\tthis.state = {\r\n// \t\t\tsearchState: this.props.searchSensor,\r\n\r\n// \t\t}\r\n// \t}\r\n// \tonChange = (searchState) => {\r\n// \t\tRouter.push({\r\n// \t\t\tpathname: '/',\r\n// \t\t\tquery: { name: searchState }\r\n// \t\t})\r\n// \t\tconsole.log(this.props.router.query.name)\r\n// \t}\r\n\r\n// \trender() {\r\n// \t\t// console.log(this.props.searchSensor)\r\n// \t\t// console.log(searchState)\r\n// \t\tconsole.log(this)\r\n// \t\t// const Page = ({ router }) => {\r\n// \t\t// \treturn <p>{router.pathname}</p>\r\n// \t\t// }\r\n// \t\t// const PostLink = props => (\r\n// \t\t// \t<li>\r\n// \t\t// \t\t<Link href={`/post?title=${props.title}`}>\r\n// \t\t// \t\t\t<a>{props.title}</a>\r\n// \t\t// \t\t</Link>\r\n// \t\t// \t</li>\r\n// \t\t// )\r\n// \t\treturn (\r\n// \t\t\t<nav className=\"tab-header__container nav flex-column flex-sm-row\" >\r\n// \t\t\t\t<Link href={`/?searchSensor=${this.props.searchSensor}`}><a>All{this.searchState}</a></Link>\r\n// \t\t\t\t<Link href={`/products/?searchSensor=${this.props.searchSensor}`}><a>Products</a></Link>\r\n// \t\t\t\t<Link href={`/artists/?searchSensor=${this.props.searchSensor}`}><a>Artists{this.props.searchSensor}</a></Link>\r\n// \t\t\t</nav>\r\n// \t\t)\r\n// \t}\r\n// }\r\n\r\n// const TabHeader = ({ router }) => {\r\n// \t// const { query } = this.props\r\n// \t// console.log(router)\r\n// \t// slug = router.query.searchSensor\r\n// \t// console.log(router)\r\n// \t// console.log(router.query)\r\n// \t// console.log(query)\r\n// \t// console.log(slug)\r\n// \t// console.log(router)\r\n// \t// console.log(slug)\r\n// \t// console.log(query.searchSensor)\r\n// \t// console.log(query.router.query.searchSensor)\r\n// \tconsole.log(router)\r\n// \treturn (\r\n// \t\t<nav className=\"tab-header__container nav flex-column flex-sm-row\" >\r\n// \t\t\t<ActiveLink href={`/`} prefetch={true}><span>All</span></ActiveLink>\r\n// \t\t\t<ActiveLink href={`/products`}><span>Products</span></ActiveLink>\r\n// \t\t\t<ActiveLink href={`/Artists`}><span>Artists</span></ActiveLink>\r\n// \t\t</nav>\r\n// \t)\r\n// }\r\n\r\n// class TabHeader extends React.Component {\r\n// \trender() {\r\n// \t\tconst { router } = this.props\r\n// \t\tconsole.log(router)\r\n// \t\treturn <div></div>\r\n// \t}\r\n// }\r\n\r\n// TabHeader.getInitialProps = async ({ query }) => {\r\n// \tconsole.log(await query)\r\n// \t// console.log(query)\r\n// \treturn { query }\r\n// }\r\n\r\n// export default withRouter(TabHeader)\r\n\r\n\r\nclass TabHeader extends React.Component {\r\n\t// state = {\r\n\t// \tquery: this.props.router.query.searchSensor,\r\n\t// }\r\n\r\n\trender() {\r\n\t\tconst { query, asPath, } = this.props.router\r\n\t\t// console.log(this)\r\n\t\tconst params = () => {\r\n\t\t\tconst { query } = this.props.router\r\n\t\t\tif (Object.getOwnPropertyNames(query).length == 0) {\r\n\t\t\t\treturn ''\r\n\t\t\t} else if (typeof query === 'object') {\r\n\t\t\t\treturn `?searchSensor=${query.searchSensor}`\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Router.push({\r\n\t\t// \tpathname: '/',\r\n\t\t// \tquery: { query: 'test' }\r\n\t\t// })\r\n\r\n\t\treturn (\r\n\t\t\t<nav className=\"tab-header__container nav flex-column flex-sm-row\" >\r\n\t\t\t\t<ActiveLink href={`/` + params()} as={'/' + params()} className=\"active\"><span>All</span></ActiveLink>\r\n\t\t\t\t<ActiveLink href={'/artists' + params()} as={'/artists' + params()}> <span>Artists</span></ActiveLink>\r\n\t\t\t\t<ActiveLink href={`/products` + params()} as={'/products' + params()}> <span>Products</span></ActiveLink>\r\n\t\t\t\t<ActiveLink href={`/images` + params()} as={'/images' + params()}> <span>Images</span></ActiveLink>\r\n\t\t\t\t<ActiveLink href={`/videos` + params()} as={'/videos' + params()}> <span>Videos</span></ActiveLink>\r\n\t\t\t\t<ActiveLink href={`/downloads` + params()} as={'/downloads' + params()}> <span>Downloads</span></ActiveLink>\r\n\t\t\t\t<ActiveLink href={`/discussions` + params()} as={'/discussions' + params()}> <span>Discussions</span></ActiveLink>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nTabHeader.getInitialProps = async ({ query }) => {\r\n\t// console.log(await query)\r\n\t// console.log(query)\r\n\treturn { query }\r\n}\r\n\r\nexport default withRouter(TabHeader)\r\n"]},"metadata":{},"sourceType":"module"}